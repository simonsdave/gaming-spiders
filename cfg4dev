configure_dev_env()
{
    if [ ! -f "$PWD/requirements.txt" ]; then
        echo "Must source this script from project's root directory" >&2
        return 1
    fi

    if [ -d "$PWD/env" ]; then
        source "$PWD/env/bin/activate"
    else
        virtualenv env
        source "$PWD/env/bin/activate"

        pip install pip==1.5.6

        pip install --process-dependency-links --requirement "$PWD/requirements.txt"

        OSNAME=$(uname -s)
        case "$OSNAME" in
            Linux)
                CHROMEDRIVER_URL="http://chromedriver.storage.googleapis.com/2.15/chromedriver_linux64.zip"
                ;;
            Darwin)
                CHROMEDRIVER_URL="http://chromedriver.storage.googleapis.com/2.15/chromedriver_mac32.zip"
                ;;
            *)
                echo "Unsupported operating system '$OSNAME'" >&2
                return 1
                ;;
        esac
        curl -s --output chromedriver.zip $CHROMEDRIVER_URL
        unzip chromedriver.zip
        rm chromedriver.zip
        mv chromedriver "$PWD/env/bin/."
    fi
    export PATH=$PATH:"$PWD/bin"
    export PYTHONPATH="$PWD"

    if [ "" != "`which Xvfb`" ]; then
        if [ "" == "$DISPLAY" ]; then
            export DISPLAY=:99
        fi
        if [ "0" == "`ps aux | grep \[X\]vfb | wc -l | sed -e "s/[[:space:]]//g"`" ]; then
            Xvfb $DISPLAY -ac -screen 0 1280x1024x24 >& /dev/null &
        fi
    fi

    return 0
}

configure_dev_env
